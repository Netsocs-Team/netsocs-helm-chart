apiVersion: apps/v1
kind: Deployment
metadata:
    name: automation-backend
    labels:
        app: automation-backend
spec:
    replicas: 1
    selector:
        matchLabels:
            app: automation-backend
    template:
        metadata:
            labels:
                app: automation-backend
        spec:
            containers:
                - name: automation-backend
                  image: {{ .Values.registry }}/module.automation/backend:main
                  imagePullPolicy: {{ .Values.imagePullPolicy }}                  
                  ports:
                    - containerPort: 8080
                  env:                  
                  - name: MYSQLDB_AUTOMATION_DATABASE
                    value: "netsocs"
                  - name: MYSQLDB_USER
                    valueFrom:
                      configMapKeyRef:
                        name: {{ .Release.Name }}-netsocs-configurations
                        key: DB_USER
                  - name: MYSQLDB_PASSWORD
                    valueFrom:
                      configMapKeyRef:
                        name: {{ .Release.Name }}-netsocs-configurations
                        key: DB_PASS
                  - name: MYSQLDB_HOST
                    valueFrom:
                      configMapKeyRef:
                        name: {{ .Release.Name }}-netsocs-configurations
                        key: DB_HOST
                  - name: MYSQLDB_PORT
                    valueFrom:
                      configMapKeyRef:
                        name: {{ .Release.Name }}-netsocs-configurations
                        key: DB_PORT
                  - name: REDIS_HOST
                    valueFrom:
                      configMapKeyRef:
                        name: {{ .Release.Name }}-netsocs-configurations
                        key: REDIS_HOST
                  - name: REDIS_PORT
                    valueFrom:
                      configMapKeyRef:
                        name: {{ .Release.Name }}-netsocs-configurations
                        key: REDIS_PORT
                  - name: REDIS_PASSWORD
                    valueFrom:
                      configMapKeyRef:
                        name: {{ .Release.Name }}-netsocs-configurations
                        key: REDIS_PASS
                  - name: PORT
                    value: "8080"
                  - name: DRIVERHUB_HOST
                    value: "http://netsocs-driverhub-service:3196"
            
---
apiVersion: v1
kind: Service
metadata:
    name: automation-backend-service
spec:
    selector:
        app: automation-backend
    ports:
        - protocol: TCP
          port: 8080
          targetPort: 8080
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: automation-backend-ingress
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /$2
#     nginx.ingress.kubernetes.io/use-regex: "true"
# spec:
#   ingressClassName: nginx
#   rules:
#   - http:
#       paths:
#       - path: /api/netsocs/automation(/|$)(.*)
#         pathType: ImplementationSpecific
#         backend:
#           service:
#             name: automation-backend-service
#             port:
#               number: 8080
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: strip-prefix-automation
spec:
  stripPrefix:
    prefixes:
      - /api/netsocs/automation
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: automation-ingress
  namespace: default
spec:
  routes:
    - match: PathPrefix(`/api/netsocs/automation`)
      kind: Rule
      middlewares:
        - name: strip-prefix-automation
      services:
        - name: automation-backend-service
          port: 8080
