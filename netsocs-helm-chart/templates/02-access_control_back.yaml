apiVersion: apps/v1
kind: Deployment
metadata:
  name: netsocs-modules-accesscontrol-backend
  labels:
    app: netsocs-modules-accesscontrol-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: netsocs-modules-accesscontrol-backend
  template:
    metadata:
      labels:
        app: netsocs-modules-accesscontrol-backend
    spec:
      containers:
        - name: netsocs-modules-accesscontrol-backend
          image: {{ .Values.registry }}/module.access_control/backend:08dceb01fa02084eb4cdb747a7d348384b566eaa
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - containerPort: 3000
          env:
            - name: MYSQL_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-netsocs-configurations
                  key: DB_HOST
            - name: MYSQL_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-netsocs-configurations
                  key: DB_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-netsocs-configurations
                  key: DB_PASS
            - name: MYSQL_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-netsocs-configurations
                  key: DB_PORT
            - name: TABLE_PREFIX
              value: "ac"
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-netsocs-configurations
                  key: DB_NAME 
            - name: API_PORT
              value: "3000"
            - name: ENABLE_CORS
              value: "true"
            - name: MAIL_HOST
              value: gator2120.hostgator.com
            - name: MAIL_PORT
              value: "465"
            - name: MAIL_USERNAME
              value: teresa.carreno@netsocs.com
            - name: MAIL_PASSWORD
              value: "p4ssword"
            - name: DRIVERHUB_URL
              value: http://netsocs-driverhub-service:3196
            - name: CONFIG_MODULE_API_V2_URL
              value: http://netsocs-modules-configuration-backendv2-service:3091/api/v2
            - name: STATIC_FOLDER
              value: static
          volumeMounts:
            - name: static-folder-storage
              mountPath: /app/static/
      imagePullSecrets:
        - name: docker-cred
      volumes:
        - name: static-folder-storage
          persistentVolumeClaim:
            claimName: access-static-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: netsocs-modules-accesscontrol-backend-service
spec:
  selector:
    app: netsocs-modules-accesscontrol-backend
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: netsocs-modules-accesscontrol-backend-ingress
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /$2
#     nginx.ingress.kubernetes.io/use-regex: "true"
#     nginx.ingress.kubernetes.io/proxy-body-size: 100m
#     nginx.ingress.kubernetes.io/proxy-buffers: "8 16k"
#     nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
# spec:
#   ingressClassName: nginx
#   rules:
#     - http:
#         paths:
#           - path: /api/netsocs/module.access_control(/|$)(.*)
#             pathType: ImplementationSpecific
#             backend:
#               service:
#                 name: netsocs-modules-accesscontrol-backend-service
#                 port:
#                   number: 3000
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: strip-prefix-access
spec:
  stripPrefix:
    prefixes:
      - /api/netsocs/module.access_control
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: access-ingress
  namespace: default
spec:
  routes:
    - match: PathPrefix(`/api/netsocs/module.access_control`)
      kind: Rule
      middlewares:
        - name: strip-prefix-access
      services:
        - name: netsocs-modules-accesscontrol-backend-service
          port: 3000
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: access-static-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/netsocs/static   # Directorio en el nodo donde se almacenarán los archivos estáticos
  persistentVolumeReclaimPolicy: Retain
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: access-static-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
